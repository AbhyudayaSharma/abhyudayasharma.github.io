name: build

on:
  push:
    branches-ignore:
    - master

jobs:
  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x]
        # TODO enable Windows builds
        os: [ubuntu-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      name: Use Node.js ${{ matrix.node-version }}
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install, build and test
      run: |
        npm install
        npm run build --if-present
        npm run lint
        npm test -- --coverage --verbose
    env:
      CI: true

  deploy:
    name: Deploy to GCP
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/develop' # only deploy if commited to 'develop'
    needs: [build]
    env:
      GCLOUD_PROJECT: abhyudaya-dev-1
      GCLOUD_REGION: us-central1
      GCLOUD_PLATFORM: managed
      DOCKER_IMAGE_NAME: abhyudaya.dev
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        name: Setup Node.js
        with:
          node-version: 12.x
      - name: npm build
        run: |
          echo Running the build...
          npm install
          npm run build --if-present
      - name: build docker image
        # Google Cloud Run cannot use images from DockerHub, so push the image
        # to Google Container Repository.
        # TODO also push to DockerHub
        run: |
          echo Building docker image
          GCR_IMAGE="gcr.io/$GCLOUD_PROJECT/$DOCKER_IMAGE_NAME:$GITHUB_SHA"
          docker build --tag "$GCR_IMAGE" . --file ./Dockerfile
      - continue-on-error: false
        name: Setup Google Cloud SDK
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: deploy to Google Cloud Run
        run: |
          gcloud run deploy "$GCLOUD_PROJECT" --image "$GCR_IMAGE" \
            --region $GCLOUD_REGION --platform $GCLOUD_PLATFORM
